---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=e6707cffd878b1326a7ea9b2f7709b32&query=Arrival
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 25 Aug 2022 21:20:37 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 b2e73ba9927937f3386dec7cc8acb7f6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO5-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - TCz8DP_7XsO3aRa7h1wJ8yUrkRUI3kFZFg5Td3znyMea7-kPHSlG3A==
      Age:
      - '454'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 25 Aug 2022 21:28:11 GMT
recorded_with: VCR 6.1.0
